@using Syncrosoft.Framework.Controles.MVC.Script;
@using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
@using SSO.SGP.Web.Controllers;
@using Syncrosoft.Framework.Controles.MVC;
@model SSO.SGP.EntidadesDeNegocio.CustomCambirClave

@{
    Layout = null;
    var hash = "form" + Session.GetHashCode();
}


@Scripts.Render("~/bundles/jqueryval")
<script src="ts/Usuarios/CambiarClave.js"></script>
<script src="ts/Usuarios/UsuariosManager.js"></script>
<script src="ts/Syncro/SyncroModal.js"></script>
@using (Html.BeginForm("CambiarClave", "Usuarios", FormMethod.Post, new { id = hash }))
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="control-group">
                    @Html.LabelFor(model => model.ClaveActual, new { @class = "control-label" })
                    <div class="controls">
                        @Html.PasswordFor(model => model.ClaveActual, new { @class = "form-control col-md-12", @id = "ClaveActual" + hash, @tabindex = "2" })
                        @Html.ValidationMessageFor(model => model.ClaveActual)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="control-group">
                    @Html.LabelFor(model => model.ClaveNueva, new { @class = "control-label" })
                    <div class="controls">
                        @Html.PasswordFor(model => model.ClaveNueva, new { @class = "form-control col-md-12", @id = "ClaveNueva" + hash, @tabindex = "2" })
                        @Html.ValidationMessageFor(model => model.ClaveNueva)
                    </div>
                </div>
            </div>
            <!--fin de div md-12-->
        </div>
        <!--fin del row-->
        <div class="row">
            <div class="col-md-12">
                <div class="control-group">
                    @Html.LabelFor(model => model.ReClaveNueva, new { @class = "control-label" })
                    <div class="controls">
                        @Html.PasswordFor(model => model.ReClaveNueva, new { @class = "form-control col-md-12", @id = "ReClaveNueva" + hash, @tabindex = "3" })
                        @Html.ValidationMessageFor(model => model.ReClaveNueva)
                    </div>
                </div>
            </div>
            <!--fin de div md-12-->
        </div>
        <!--fin del row-->

        @*    <input type="hidden" value="doc" id="NombreUsuario" name="NombreUsuario"  />*@

        <div class="form-actions">

            <input type="button" value="Cancelar" id="Cancelar@(hash)" class="btn" />

            <input type="button" value="Guardar" id="Guardar@(hash)" class="btn green" />

        </div>
        <!--fin form-actions>-->
    </div> <!--fin de container-fluid-->
}

<script type="text/javascript">
    $(function () {
        app.Desbloquear();
    });

    if (oUsuarios == null)
        var oUsuarios = new Usuarios.ts.UsuariosManager();

    var viewCambiarClave = new Usuarios.ts.CambiarClave("@(hash)");
    oUsuarios.setCambiarClave(viewCambiarClave);


</script>
