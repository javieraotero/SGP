@using Syncrosoft.Framework.Controles.MVC.Script;
@model SSO.SGP.Web.Models.UsuariosPassword
@{
    ViewBag.Title = "Editar";
    Layout = null;
}

<script src="@Url.Content("~/assets/bootstrap-toggle-buttons/static/js/jquery.toggle.buttons.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/chosen-bootstrap/chosen/chosen.jquery.min.js")" type="text/javascript"></script>

<link rel="stylesheet" href="@Url.Content("~/assets/bootstrap-toggle-buttons/static/stylesheets/bootstrap-toggle-buttons.css")" />
<link rel="stylesheet" href="@Url.Content("~/assets/chosen-bootstrap/chosen/chosen.css")" />

@using (Html.BeginForm("EditUsuario", "Account", FormMethod.Post, new { id = "fEditUsuario" + Model.Id }))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.NombreUsuario)
    <div class="container-fluid">
        <div class="row">
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(model => model.NombrePersona, new { @class = "control-label" })
                    <div class="controls controls-row">
                        @Html.TextBoxFor(model => model.NombrePersona, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.NombrePersona)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(model => model.Domicilio, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Domicilio, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.Domicilio)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(model => model.Telefono, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.Telefono)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(model => model.Celular, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Celular, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.Celular)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span12">
                <div class="control-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Email, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(model => model.NewPassword, new { @class = "control-label" })
                    <div class="controls">
                        @Html.PasswordFor(model => model.NewPassword, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.NewPassword)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label" })
                    <div class="controls">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "span12 m-wrap" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword)
                    </div>
                </div>
            </div>
        </div>
        <div class="control-group">
            <div class="controls">
                @if (Model.FechaBaja != null)
                {<span style="color: Red; font-weight: bold; text-decoration: underline;">Usuario Inactivo</span>}
            </div>
        </div>
        <div class="row">
            <div class="form-actions">
                <input type="button" value="Cancelar" t="cancelar" class="btn" />
                <input type="submit" value="Guardar" class="btn blue" />
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
@JQuery.ajaxPost("fEditUsuario" + Model.Id, "dtUsuarios", "onComplete(success);")
<script type="text/javascript">

    $(document).ready(function () {
        $("#ProgressDialog").dialog("close");

        setValidadorDecimal();

        //focus en el primer elemento del formulario
        $("form:not(.filter) :input:visible:enabled:first").focus();

        $("input[t='cancelar']").click(function (e) {
            closeCurrentTabAndGo(0);
        })

        $("input[type='text'], textarea, input[type='password']").change(function () {
            this.value = this.value.replace(/<(.|\n)*?>/g, "");
        });
    });

    function onComplete(success) {
        if (success)
            closeCurrentTab();
    }

</script>
