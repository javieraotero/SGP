@using Syncrosoft.Framework.Controles.MVC.Script;
@using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
@using SSO.SGP.Web.Controllers;
@using SSO.SGP.Web.Areas.RRHH.Controllers;
@using Syncrosoft.Framework.Controles.MVC;
@using SSO.SGP.EntidadesDeNegocio;
@using SSO.SGP.EntidadesDeNegocio.Vistas;
@using SSO.SGP.ReglasDeNegocio;
@model SSO.SGP.EntidadesDeNegocio.Agentes

@{
    Layout = null;
    var hash = "form" + Session.GetHashCode();
    var movimientos = new SSO.SGP.AccesoADatos.CesidaMovimientosAD().ObtenerTodo().ToList();
}

<script src="@Url.Content("~/assets/plugins/chosen-bootstrap/chosen/chosen.jquery.min.js")" type="text/javascript"></script>
<link rel="stylesheet" href="@Url.Content("~/assets/plugins/chosen-bootstrap/chosen/chosen.css")" />
@Scripts.Render("~/bundles/jqueryval")
<script src="Areas/RRHH/ts/Agentes/CrearMovimientoCesida.js"></script>
<script src="Areas/RRHH/ts/Agentes/AgentesManager.js"></script>
<script src="ts/Syncro/SyncroModal.js"></script>
<script src="ts/Syncro/SyncroAutocomplete.js"></script>
@using (Html.BeginForm("Crear", "Agentes", FormMethod.Post, new { area = "RRHH", id = hash }))
{
    <div class="container-fluid">
        <div class="row" id="DetalleAgente">
            <div class="col-md-6">
                <div class="control-group">
                    <label class="control-label">Agente</label>
                    <div class="controls">
                        Nombre: <span id="spNombre@(hash)">@Model.Personas.Apellidos, @Model.Personas.Nombres</span><br />
                        Legajo: <span id="spLegajo@(hash)">@Model.Legajo</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="control-group">
                    <label class="control-label">Seleccione movimiento a informar</label>
                    <div class="controls">                        
                        <select id="Movimiento@(hash)" class="form-control">
                            <option value="0">Seleccione</option>
                            @foreach (var m in movimientos) {
                                <option value="@m.Id">@m.Nombre</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="row_parametros@(hash)" style="display:none">
            <div class="col-md-12">
                <table id="Parametros@(hash)" class="table">
                    <tbody id="body_parametros@(hash)">                        
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <label class="control-label">Nombramientos</label>
                <div class="controls">
                    @*@(SyncroHtml.TablaJson<NombramientosViewT>(new NombramientosViewT(), "Agentes/NombramientosJsonT", new { @id = "Nombramientos" + hash, @class = "table table-striped table-bordered table-advance table-hover", data_cargar = "true" }))*@
                    <table id="Nombramientos@(hash)" data-cargar="false" class="table table-striped table-bordered table-advance table-hover">
                        <thead>
                            <tr>
                                <th>Desde</th>
                                <th>Hasta</th>
                                <th>Cargo</th>                               
                                <th>Organismo</th>                                
                                <th>SR</th>
                                <th>Ult.Ascenso</th>
                                <th>Categoría</th>
                                <th>Ubicación</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (Nombramientos n in Model.Nombramientos.Where(n => !n.FechaEliminacion.HasValue).OrderBy(l => l.FechaDeAlta))
                            {
                                var fechabaja = (n.FechaDeBaja.HasValue) ? n.FechaDeBaja.Value.ToShortDateString() : "";
                                <tr>
                                    <td>@n.FechaDeAlta.ToShortDateString()</td>
                                    <td>@fechabaja</td>
                                    <td>@n.Cargos.Descripcion</td>
                                    <td>@n.Organismos.Descripcion</td>
                                    <td>@n.SituacionRevista</td>
                                    <td>@(n.FechaUltimoAscenso.HasValue ? n.FechaUltimoAscenso.Value.ToShortDateString() : "")</td>
                                    <td>@(n.Categoria_Cesidas != null ? n.Categoria_Cesidas.DESCRIPCION : "-")</td>
                                    <td>@(n.Ubicacion_Cesidas != null ? n.Ubicacion_Cesidas.DESCRIPCION : "-")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <label class="control-label">Familiares</label>
                <div class="controls">
                    <table id="Familiares@(hash)" data-cargar="false" class="table table-striped table-bordered table-advance table-hover">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Relación</th>
                                <th>Documento</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.GrupoFamiliar.Count() > 0)
                            {
                                foreach (GrupoFamiliar g in Model.GrupoFamiliar.Where(g => g.Activo == true))
                                {
                                    <tr>
                                        <td>@g.ApellidosYNombre</td>
                                        <td>@g.TipoMiembros.Descripcion</td>
                                        <td>@g.Documento</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="2">El agente no presenta familiares</td></tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
        <div class="modal fade" id="ModalAgentes" tabindex="-1" role="basic" aria-hidden="true">
            <div class="modal-dialog modal-wide">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">Crear un nueva Operación</h4>
                    </div>
                    <div class="modal-body">
                        Cargando formulario...
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>

        <div class="form-actions">

            <input type="hidden" id="Agente@(hash)" name="Agente" value="@Model.Id"/>

            <input type="button" value="Cancelar" id="Cancelar@(hash)" class="btn" />

            <input type="button" value="Guardar" id="Guardar@(hash)" class="btn green" />

            <input type="button" value="Guardar & Nuevo" id="GuardarYNuevo@(hash)" class="btn blue" />

        </div>
        <!--fin form-actions>-->
    </div> <!--fin de container-fluid-->
}

<script type="text/javascript">
    $(function () {
        app.Desbloquear();
    });

    if (oAgentes == null)
        var oAgentes = new Agentes.ts.AgentesManager();

    var viewCrearMovimiento = new Agentes.ts.CrearMovimientoCesida("@(hash)");
    oAgentes.setCrearMovimientoCesida(viewCrearMovimiento);


</script>
