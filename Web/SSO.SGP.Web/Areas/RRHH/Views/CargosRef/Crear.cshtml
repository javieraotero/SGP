@using Syncrosoft.Framework.Controles.MVC.Script;
@using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
@using SSO.SGP.Web.Controllers;	
@using SSO.SGP.Web.Areas.RRHH.Controllers;
@using Syncrosoft.Framework.Controles.MVC;
@model SSO.SGP.EntidadesDeNegocio.CargosRef

@{
	Layout = null;
	var hash = "form"+Session.GetHashCode();
}

<script src="@Url.Content("~/assets/plugins/chosen-bootstrap/chosen/chosen.jquery.min.js")" type="text/javascript"></script>

<link rel="stylesheet" href="@Url.Content("~/assets/plugins/chosen-bootstrap/chosen/chosen.css")" />	
@Scripts.Render("~/bundles/jqueryval")
<script src="Areas/RRHH/ts/CargosRef/Crear.js"></script>
<script src="Areas/RRHH/ts/CargosRef/CargosRefManager.js"></script>
<script src="ts/Syncro/SyncroModal.js"></script>
@using (Html.BeginForm("Crear", "CargosRef", FormMethod.Post, new { area="RRHH", id = hash })) {
<div class="container-fluid">

		<div class="row">
		
		<div class="col-md-6">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Descripcion, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.Descripcion, new {@class = "form-control col-md-12", @id="Descripcion"+hash, @tabindex="1"})
			@Html.ValidationMessageFor(model => model.Descripcion)
		</div>
	</div>	



	</div><!--fin de div md-12-->
		<div class="col-md-6">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Grupo, new { @class= "control-label" })
		<div class="controls">
			@*@Html.DropDownList("Grupo", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewBag., new { @class = "form-control col-md-12", @id=""+hash, @tabindex="2" })*@
            <select name="Grupo" id="Grupo@(hash)" class="form-control col-md-12" tabindex="2">
                <option value="1">Valor 1</option>
                <option value="2">Valor 2</option>
                <option value="2">Valor 3</option>
			</select>
            <script type="text/javascript">
                $(function () {
                    $('#Grupo@(hash)').chosen();
			    });
			</script>
		@Html.ValidationMessageFor(model => model.Grupo)
		</div>
	</div>


	</div><!--fin de div md-12-->
		</div> <!--fin del row-->
		
		<div class="row">
		
		<div class="col-md-4">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Orden, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.Orden, new {@class = "form-control col-md-12", @id="Orden"+hash, @tabindex="3"})
			@Html.ValidationMessageFor(model => model.Orden)
		</div>
	</div>	



	</div><!--fin de div md-12-->
		<div class="col-md-4">
		
	<div class="control-group">
		@Html.LabelFor(model => model.CodigoRRHH, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.CodigoRRHH, new {@class = "form-control col-md-12", @id="CodigoRRHH"+hash, @tabindex="4"})
			@Html.ValidationMessageFor(model => model.CodigoRRHH)
		</div>
	</div>	



	</div><!--fin de div md-12-->
		<div class="col-md-4">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Presupuesto, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.Presupuesto, new {@class = "form-control col-md-12", @id="Presupuesto"+hash, @tabindex="5"})
			@Html.ValidationMessageFor(model => model.Presupuesto)
		</div>
	</div>	



	</div><!--fin de div md-12-->
</div> <!--fin de row -->




	<div class="form-actions">
	
		<input type="button" value="Cancelar" id="Cancelar@(hash)" class="btn" />

		<input type="button" value="Guardar" id="Guardar@(hash)" class="btn green" />

		<input type="button" value="Guardar & Nuevo" id="GuardarYNuevo@(hash)" class="btn blue" />

	</div><!--fin form-actions>-->
</div> <!--fin de container-fluid-->
}

	<script type="text/javascript">       
		$(function () {
			app.Desbloquear();
		});
		
		if (oCargosRef == null)
			var oCargosRef = new CargosRef.ts.CargosRefManager();
		
		var viewCrear = new CargosRef.ts.Crear("@(hash)");
		oCargosRef.setCrear(viewCrear); 
		
		
	</script>	
