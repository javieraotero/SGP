@using Syncrosoft.Framework.Controles.MVC.Script;
@using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
@using SSO.SGP.Web.Controllers;	
@using Syncrosoft.Framework.Controles.MVC;
@model SSO.SGP.EntidadesDeNegocio.UnidadesDeOrganizacionRef

@{
	Layout = null;
	var hash = "form"+Session.GetHashCode();
}

	
@Scripts.Render("~/bundles/jqueryval")
<script src="ts/UnidadesDeOrganizacionRef/Editar.js"></script>
<script src="ts/UnidadesDeOrganizacionRef/UnidadesDeOrganizacionRefManager.js"></script>
<script src="ts/Syncro/SyncroModal.js"></script>
@using (Html.BeginForm("Editar", "UnidadesDeOrganizacionRef", FormMethod.Post, new { id = hash })) {
<div class="container-fluid">

		<div class="row">
		
		<div class="span12 m-wrap">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Nombre, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.Nombre, new {@class = "form-control col-md-12", @id="Nombre"+hash, @tabindex="2"})
			@Html.ValidationMessageFor(model => model.Nombre)
		</div>
	</div>	



	</div><!--fin de div md-12-->
</div> <!--fin de row -->


		
			  @Html.HiddenFor(model => model.Id, new {@id="Id" + hash})
		



	<div class="form-actions">
	
		<input type="button" value="Cancelar" id="Cancelar@(hash)" class="btn" />

		<input type="button" value="Guardar" id="Guardar@(hash)" class="btn green" />

	</div><!--fin form-actions>-->
</div> <!--fin de container-fluid-->
}

	<script type="text/javascript">       
		$(function () {
			app.Desbloquear();
		});
		
		if (oUnidadesDeOrganizacionRef == null)
			var oUnidadesDeOrganizacionRef = new UnidadesDeOrganizacionRef.ts.UnidadesDeOrganizacionRefManager();
		
		var viewEditar = new UnidadesDeOrganizacionRef.ts.Editar("@(hash)");
		oUnidadesDeOrganizacionRef.setEditar(viewEditar); 
		
		
	</script>	
