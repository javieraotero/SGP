@using Syncrosoft.Framework.Controles.MVC.Script;
@using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
@using SSO.SGP.Web.Controllers;	
@using Syncrosoft.Framework.Controles.MVC;
@model SSO.SGP.EntidadesDeNegocio.CustomImputarFactura

@{
	Layout = null;
	var hash = "form"+Session.GetHashCode();
}

<script src="@Url.Content("~/assets/plugins/chosen-bootstrap/chosen/chosen.jquery.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/ts/Syncro/SyncroTabla.js")" type="text/javascript"></script>

<link rel="stylesheet" href="@Url.Content("~/assets/plugins/chosen-bootstrap/chosen/chosen.css")" />	
@Scripts.Render("~/bundles/jqueryval")
<script src="Areas/Expedientes/ts/FacturasImputadas/Crear.js"></script>
<script src="Areas/Expedientes/ts/FacturasImputadas/FacturasImputadasManager.js"></script>
<script src="ts/Syncro/SyncroModal.js"></script>
@using (Html.BeginForm("Crear", "FacturasImputadas", FormMethod.Post, new { id = hash })) {
<div class="container-fluid">

		<div class="row">
		
		<div class="col-md-4">
				
	<div class="control-group">
		@Html.LabelFor(model => model.Factura, new { @class= "control-label" })
		<div class="controls">
			<input type="text" id="txtFactura@(hash)" class="form-control col-md-12" tabindex="2" placeholder="Seleccione Factura" />
			<p class="help-block"></p>
			<input type="hidden" id="Factura@(hash)" name="Factura" />
			@Html.ValidationMessageFor(model => model.Factura)
			<script type="text/javascript">
			$(function () {
				$("#txtFactura@(hash)").autocomplete({
					source: "@Url.Action("JsonSelect", "Facturas")",
					//appendTo: '#demo',
					minLength: 2,
					select: function (event, ui) {
						$("#txtFactura@(hash)").val(ui.item.text);
						$("#Factura@(hash)").val(ui.item.value);
						return false;
					}
				});
			});
			</script>
		</div>
	</div>


	</div><!--fin de div md-12-->
		<div class="col-md-4">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Fecha, new { @class= "control-label" })
		<div class="controls">
		<div class="input-append date date-picker" data-date="12-02-2012" data-date-format="dd-mm-yyyy" data-date-viewmode="years">
			@Html.TextBoxFor(model => model.Fecha, "{0:dd/MM/yyyy}", new {@class="m-wrap form-control m-ctrl-medium date-picker", @id="Fecha"+hash, @tabindex="3" })
			<span class="add-on"><i class="icon-calendar"></i></span> 
		</div>
		<script type="text/javascript">
			$(function () {
				$('#Fecha@(hash)').datepicker(pickerOpts);
			});
		</script>
		@Html.ValidationMessageFor(model => model.Fecha)
		</div>
	</div>


	</div><!--fin de div md-12-->
		<div class="col-md-4">
		
	<div class="control-group">
		@Html.LabelFor(model => model.AnioContable, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.AnioContable, new {@class = "form-control col-md-12", @id="AnioContable"+hash, @tabindex="4"})
			@Html.ValidationMessageFor(model => model.AnioContable)
		</div>
	</div>	



	</div><!--fin de div md-12-->
		</div> <!--fin del row-->
		
		<div class="row">
		
		<div class="col-md-5">
				
	<div class="control-group">	<label class="control-label" for="Partida">Partida</label>
		<div class="controls">
			<input type="text" id="txtPartida@(hash)" class="form-control col-md-12" tabindex="4" placeholder="Seleccione Partida" />
			<p class="help-block"></p>
			<input type="hidden" id="Partida@(hash)" name="Partida" />
			<script type="text/javascript">
			$(function () {
				$("#txtPartida@(hash)").autocomplete({
					source: "@Url.Action("JsonSelect", "PartidasPresupuestarias")",
					//appendTo: '#demo',
					minLength: 2,
					select: function (event, ui) {
						$("#txtPartida@(hash)").val(ui.item.text);
						$("#Partida@(hash)").val(ui.item.value);
						return false;
					}
				});
			});
			</script>
		</div>
	</div>


	</div><!--fin de div md-12-->
		<div class="col-md-3">
		
	<div class="control-group"><label class="control-label" for="Division">Division</label>
		<div class="controls">
			@Html.DropDownList("Division", (IEnumerable<System.Web.Mvc.SelectListItem>)ViewBag.DivisionesExtraPresupuestarias, new { @class = "form-control col-md-12", @id="DivisionesExtraPresupuestarias"+hash, @tabindex="5" })
			<script type="text/javascript">
				$(function () {
					$('#Division@(hash)').chosen();
				});
			</script>
		@Html.ValidationMessageFor(model => model.Division)
		</div>
	</div>


	</div><!--fin de div md-12-->
		<div class="col-md-2">
		
	<div class="control-group">
		@Html.LabelFor(model => model.Importe, new { @class= "control-label" })
		<div class="controls">
			@Html.TextBoxFor(model => model.Importe, new {@class = "form-control col-md-12", @id="Importe"+hash, @tabindex="6"})
			@Html.ValidationMessageFor(model => model.Importe)
		</div>
	</div>	



	</div><!--fin de div md-12-->
		<div class="col-md-2">
		
	<div class="control-group">&nbsp;
		<div class="controls">	
			<input type="button" class="btn" id="AgregarFacturasImputadas@(hash)" value="AgregarFacturasImputadas" name="AgregarFacturasImputadas" />
		</div>
	</div>
	


	</div><!--fin de div md-12-->
		</div> <!--fin del row-->
		
		<div class="row">
		
		<div class="col-md-12">
		
	<div class="control-group">
		<label class="control-label">Detalle</label>
		<div class="controls">
			@(SyncroHtml.TablaJson<SSO.SGP.EntidadesDeNegocio.Vistas.FacturasImputadasDetalleViewT>(new SSO.SGP.EntidadesDeNegocio.Vistas.FacturasImputadasDetalleViewT(), "FacturasImputadas/JsonTDetalle", new { @id="Detalle", @class="table table-striped table-bordered table-advance table-hover", data_cargar="false" }))
		</div>
	</div>


	</div><!--fin de div md-12-->
</div> <!--fin de row -->




	<div class="form-actions">
	
		<input type="button" value="Cancelar" id="Cancelar@(hash)" class="btn" />

		<input type="button" value="Guardar" id="Guardar@(hash)" class="btn green" />

		<input type="button" value="Guardar & Nuevo" id="GuardarYNuevo@(hash)" class="btn blue" />

	</div><!--fin form-actions>-->
</div> <!--fin de container-fluid-->
}

	<script type="text/javascript">       
		$(function () {
			app.Desbloquear();
		});
		
		if (oFacturasImputadas == null)
			var oFacturasImputadas = new FacturasImputadas.ts.FacturasImputadasManager();
		
		var viewCrear = new FacturasImputadas.ts.Crear("@(hash)");
		oFacturasImputadas.setCrear(viewCrear); 
		
		
	</script>	
