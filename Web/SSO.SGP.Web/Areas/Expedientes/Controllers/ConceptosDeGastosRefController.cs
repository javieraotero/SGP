using System.Data.Entity;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using SSO.SGP.EntidadesDeNegocio;
using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
using SSO.SGP.AccesoADatos;
using SSO.SGP.EntidadesDeNegocio.Vistas;
using System;
using System.Data;
using System.Collections.Generic;
using System.IO;
using Syncrosoft.Framework.Utils.Logs;

/// <summary>
///  CODE GENERATED BY Xeus Technology 
///  Date: 05/02/2019 9:11:12
///  Version: 3
/// <summary>
namespace SSO.SGP.Web.Areas.Expedientes.Controllers
{
    public class ConceptosDeGastosRefController : Controller
    {
        private ConceptosDeGastosRefAD oConceptosDeGastosRef = new ConceptosDeGastosRefAD();
        private PartidasPresupuestariasAD oPartidasPresupuestarias = new PartidasPresupuestariasAD();

        #region Views

        public ActionResult Default()
        {
            return View();
        }

        public ActionResult Index()
        {
            var m = new ConceptosDeGastosRef();
            return View(m);
        }
        public ActionResult Crear()
        {
            ViewBag.Partidas = new SelectList(oPartidasPresupuestarias.ObtenerTodo().ToList(), "Id", "Mnemo");
            var m = new ConceptosDeGastosRef();
            return View(m);
        }

        public ActionResult Editar(int id = 0)
        {

            ConceptosDeGastosRef conceptosdegastosref = oConceptosDeGastosRef.ObtenerPorId(id);
            if (conceptosdegastosref == null)
            {
                return HttpNotFound();
            }
            return View(conceptosdegastosref);
        }

        #endregion

        #region HttpPost

        [HttpPost]
        public ActionResult Crear(ConceptosDeGastosRef conceptosdegastosref)
        {
            if (ModelState.IsValid)
            {
                try
                {
                    oConceptosDeGastosRef.Guardar(conceptosdegastosref);
                    return Json(new object[] { true, String.Format("Operación satisfactoria"), conceptosdegastosref.Id });
                }
                catch (Exception ex)
                {
                    Logger.GrabarExcepcion(ex, false);
                    return Json(new object[] { false, "No se ha podido procesar la operación" });
                }
            }
            else
            {
                return Json(new object[] { false, "Ha ocurrido un error en la validación" });
            }
        }

        [HttpPost]
        public ActionResult Editar(ConceptosDeGastosRef conceptosdegastosref)
        {
            if (ModelState.IsValid)
            {
                try
                {

                    oConceptosDeGastosRef.Guardar(conceptosdegastosref);
                    return Json(new object[] { true, String.Format("Operación satisfactoria") });
                }
                catch (Exception ex)
                {
                    Logger.GrabarExcepcion(ex, false);
                    return Json(new object[] { false, "No se ha podido procesar la operación" });
                }
            }
            else
            {
                return Json(new object[] { false, "Ha ocurrido un error en la validació" });
            }
        }

        [HttpPost, ActionName("Eliminar")]
        public ActionResult EliminarConfirmado(int id)
        {
            try
            {
                oConceptosDeGastosRef.Eliminar(id);

                return Json(new object[] { true, "La operación se realizó satisfactoriamente" });
            }
            catch (Exception)
            {
                return Json(new object[] { false, "No pudo eliminarse el elementos" });
            }

        }


        #endregion

        #region JsonResult

        public DataTablesResult<ConceptosDeGastosRefView> getConceptosDeGastosRefGrid(DataTablesParam dataTableParam)
        {
            return DataTablesResult.Create(this.oConceptosDeGastosRef.ObtenerParaGrilla(), dataTableParam, x => x);
        }

        public JsonResult Options()
        {
            var res = from x in this.oConceptosDeGastosRef.ObtenerOptions("")
                      select x;
            return this.Json(res, JsonRequestBehavior.AllowGet);
        }

        public JsonResult Table(string term)
        {
            var res = from x in this.oConceptosDeGastosRef.JsonT(term)
                      select x;
            return this.Json(res, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetData(int id)
        {
            return this.Json(this.oConceptosDeGastosRef.ObtenerPorId(id), JsonRequestBehavior.AllowGet);
        }

        //public JsonResult Autocomplete(string term)
        //{
        //    var res = from x in this.oConceptosDeGastosRef.ob(term)
        //              select new { id = x.Id, label = x.Id.ToString() };
        //    return this.Json(res, JsonRequestBehavior.AllowGet);
        //}

        //public JsonResult ExecuteQuery(string where_c, string order_c)
        //{
        //    var res = from x in this.oConceptosDeGastosRef.ExecuteQuery(where_c, order_c, 0, 0)
        //              select x;
        //    return this.Json(res, JsonRequestBehavior.AllowGet);
        //}

        #endregion

        protected override void Dispose(bool disposing)
        {
            //oConceptosDeGastosRef.Dispose();

            base.Dispose(disposing);
        }


    }
}
