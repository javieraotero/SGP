using System.Data.Entity;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using SSO.SGP.EntidadesDeNegocio;
using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
using SSO.SGP.AccesoADatos;
using SSO.SGP.EntidadesDeNegocio.Vistas;
using System;
using System.Data;
using System.Collections.Generic;
using System.IO;
using Syncrosoft.Framework.Utils.Logs;

/// <summary>
///  CODE GENERATED BY Xeus Technology 
///  Date: 13/12/2018 7:26:38
///  Version: 3
/// <summary>
namespace SSO.SGP.Web.Areas.Expedientes.Controllers
{
	public class VehiculosOficialesRefController : Controller
	{
		private VehiculosOficialesRefAD oVehiculosOficialesRef = new VehiculosOficialesRefAD();

		#region Views

		public ActionResult Default() 
		{
			return View();
		}

		public ActionResult Index() {
            var m = new VehiculosOficialesRef();
			return View(m);
		}
		public ActionResult Crear() {
            var m = new VehiculosOficialesRef();
			return View(m);
		}

		public ActionResult Editar(int id = 0)
        {	
	
VehiculosOficialesRef vehiculosoficialesref = oVehiculosOficialesRef.ObtenerPorId(id);
            if (vehiculosoficialesref == null)
            {
                return HttpNotFound();
            }
            return View(vehiculosoficialesref);
        }

		#endregion

		#region HttpPost

		[HttpPost]
        public ActionResult Crear(VehiculosOficialesRef vehiculosoficialesref)
        {
			if (ModelState.IsValid)
			{
				try
				{
					oVehiculosOficialesRef.Guardar(vehiculosoficialesref);
                    return Json(new object[] { true, String.Format("Operación satisfactoria"), vehiculosoficialesref.Id });
                }
                catch (Exception ex)
                {
					Logger.GrabarExcepcion(ex, false);
                    return Json(new object[] { false, "No se ha podido procesar la operación" });
                }
           }
           else
           {
                return Json(new object[] { false, "Ha ocurrido un error en la validación" });
           }
        }

		[HttpPost]
        public ActionResult Editar(VehiculosOficialesRef vehiculosoficialesref)
        {
            if (ModelState.IsValid)
            {
                try
                {
					
                    oVehiculosOficialesRef.Guardar(vehiculosoficialesref);
                    return Json(new object[] { true, String.Format("Operación satisfactoria") });
                }
                catch (Exception ex)
                {
					Logger.GrabarExcepcion(ex, false);
                    return Json(new object[] { false, "No se ha podido procesar la operación" });
                }
            }
            else
            {
                return Json(new object[] { false, "Ha ocurrido un error en la validació" });
            }
        }

		[HttpPost, ActionName("Eliminar")]
        public ActionResult EliminarConfirmado(int id)
        {
            try
            {
                oVehiculosOficialesRef.Eliminar(id);
				
                return Json(new object[] { true, "La operación se realizó satisfactoriamente" });
            }
            catch (Exception)
            {
                return Json(new object[] { false, "No pudo eliminarse el elementos" });
            }

        }


	    #endregion

	    #region JsonResult

	    public DataTablesResult<VehiculosOficialesRefView> getVehiculosOficialesRefGrid(DataTablesParam dataTableParam)
        {
            return DataTablesResult.Create(this.oVehiculosOficialesRef.ObtenerParaGrilla(), dataTableParam, x => x);
        }

		public JsonResult Options()
        {
            var res = from x in this.oVehiculosOficialesRef.ObtenerOptions("")
                      select x;
            return this.Json(res, JsonRequestBehavior.AllowGet);
        }

		//public JsonResult Table(string term)
  //      {
  //          var res = from x in this.oVehiculosOficialesRef.JsonT(term)
  //                    select x;
  //          return this.Json(res, JsonRequestBehavior.AllowGet);
  //      }

		public JsonResult GetData(int id)
        {            
            return this.Json(this.oVehiculosOficialesRef.ObtenerPorId(id), JsonRequestBehavior.AllowGet);
        }

        //public JsonResult Autocomplete(string term)
        //{
        //    var res = from x in this.oVehiculosOficialesRef.ObtenerAutocomplete(term)
        //              select new { id = x.Id, label = x.Id.ToString() };
        //    return this.Json(res, JsonRequestBehavior.AllowGet);
        //}

        //public JsonResult ExecuteQuery(string where_c, string order_c)
        //{
        //    var res = from x in this.oVehiculosOficialesRef.ExecuteQuery(where_c, order_c,0,0)
        //              select x;
        //    return this.Json(res, JsonRequestBehavior.AllowGet);
        //}

	#endregion

		protected override void Dispose(bool disposing)
        {
			//oVehiculosOficialesRef.Dispose();

			base.Dispose(disposing);
        }


	}
}
