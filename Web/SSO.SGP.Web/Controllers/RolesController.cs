using System.Linq;
using System.Web.Mvc;
using SSO.SGP.EntidadesDeNegocio;
using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables;
using SSO.SGP.AccesoADatos;
using SSO.SGP.EntidadesDeNegocio.Vistas;
using System;
using System.Data;
using Syncrosoft.Framework.Utils.Logs;
using System.Collections.Generic;
using System.Web;
using System.IO;

/// <summary>
///  CODE GENERATED BY Xeus Technology 
///  Date: 17/07/2016 17:48:47
///  Version: 3
/// <summary>
namespace SSO.SGP.Web.Controllers
{
    public class RolesController : Controller
    {
        private webpages_RolesAD owebpages_RolesRep = new webpages_RolesAD();
        private MenusAD oMenuRep = new MenusAD();

        #region Views

        public ActionResult Default()
        {
            if (Session["IdUsuario"] == null)
            {
                Logger.EscribirMensaje("Cerrar Sesion", "Se le cerro la sesion");
                ViewBag.HaySesion = 0;
            }
            else
            {
                ViewBag.HaySesion = 1;
            }

            return View();
        }

        public ActionResult Index()
        {
            return View();
        }
        public ActionResult Crear()
        {
            ViewBag.Menues = oMenuRep.ObtenerTodo().OrderBy(x => x.Orden).ToList();
            return View();
        }

        public ActionResult Editar(int id = 0)
        {
            webpages_Roles webpages_Roles = owebpages_RolesRep.ObtenerPorId(id);
            ViewBag.Menues = oMenuRep.ObtenerTodo().OrderBy(x => x.Orden).ToList();

            if (webpages_Roles == null)
            {
                return HttpNotFound();
            }
            return View(webpages_Roles);
        }

        #endregion

        #region HttpPost

        [HttpPost]
        public ActionResult Crear(int idRol, string roleName, string ItemMenuDefault, List<int> listadoMenus)
        {
            try
            {
                webpages_Roles owebpages_Roles = new webpages_Roles();

                owebpages_Roles.RoleName = roleName;
                owebpages_Roles.ItemMenuDefault = !string.IsNullOrEmpty(ItemMenuDefault) ? ItemMenuDefault : "39_40";

                owebpages_RolesRep.Guardar(owebpages_Roles);

                foreach (var item in listadoMenus)
                {
                    owebpages_RolesRep.GestionarRolesItemsMenu(owebpages_Roles.RoleId, item, true);
                }

                return Json(new object[] { true, String.Format("Operación satisfactoria"), owebpages_Roles.RoleId });
            }
            catch (Exception ex)
            {
                Logger.GrabarExcepcion(ex, false);
                return Json(new object[] { false, "No se ha podido procesar la operación" });
            }
        }

        [HttpPost] 
        public ActionResult Editar(int idRol, string roleName, string ItemMenuDefault, List<int> listadoMenus)
        {
            try
            {
                webpages_Roles owebpages_Roles = owebpages_RolesRep.ObtenerPorId(idRol);

                owebpages_Roles.RoleName = roleName;
                //owebpages_Roles.ItemMenuDefault = !string.IsNullOrEmpty(ItemMenuDefault) ? ItemMenuDefault : "39_40";

                owebpages_RolesRep.Actualizar(owebpages_Roles);

                foreach (var item in listadoMenus)
                {
                    if (owebpages_Roles.Menus.Where(m => m.Id == item).Count() == 0)
                        owebpages_RolesRep.GestionarRolesItemsMenu(owebpages_Roles.RoleId, item, true);
                }

                foreach (var item in owebpages_Roles.Menus)
                {
                    if (!listadoMenus.Contains(item.Id) && item.Padre.HasValue)
                        owebpages_RolesRep.GestionarRolesItemsMenu(owebpages_Roles.RoleId, item.Id, false);
                }

                return Json(new object[] { true, String.Format("Operación satisfactoria") });
            }
            catch (Exception ex)
            {
                Logger.GrabarExcepcion(ex, false);
                return Json(new object[] { false, "No se ha podido procesar la operación" });
            }
        }

        [HttpPost, ActionName("Eliminar")]
        public ActionResult EliminarConfirmado(int id)
        {
            try
            {
                //webpages_Roles owebpages_Roles = owebpages_RolesRep.ObtenerPorId(id);
                //owebpages_Roles.Activo = false;
                //owebpages_Roles.UsuarioElimina = SessionHelper.IdUsuario.Value;
                //owebpages_Roles.FechaElimina = DateTime.Now;
                //owebpages_RolesRep.Guardar(owebpages_Roles);


                return Json(new object[] { true, "La operación se realizó satisfactoriamente" });
            }
            catch (Exception ex)
            {
                Logger.GrabarExcepcion(ex, false);
                return Json(new object[] { false, "No pudo eliminarse el elementos" });
            }

        }


        #endregion

        #region JsonResult

        public DataTablesResult<webpages_RolesView> getRolesGrid(DataTablesParam dataTableParam)
        {
            return DataTablesResult.Create(this.owebpages_RolesRep.ObtenerParaGrilla(), dataTableParam, x => x);
        }

        public JsonResult Options()
        {
            var res = from x in this.owebpages_RolesRep.ObtenerOptions()
                      select x;
            return this.Json(res, JsonRequestBehavior.AllowGet);
        }

        public JsonResult Table(string term)
        {
            var res = from x in this.owebpages_RolesRep.JsonT(term)
                      select x;
            return this.Json(res, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetData(int id)
        {
            return this.Json(this.owebpages_RolesRep.ObtenerPorId(id), JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllData()
        {
            return this.Json(this.owebpages_RolesRep.ObtenerTodo(), JsonRequestBehavior.AllowGet);
        }

        public JsonResult Autocomplete(string term)
        {
            var res = from x in this.owebpages_RolesRep.ObtenerAutocomplete(term)
                      select new { id = x.RoleId, label = x.RoleName };
            return this.Json(res, JsonRequestBehavior.AllowGet);
        }

        #endregion

        protected override void Dispose(bool disposing)
        {
            //owebpages_Roles.Dispose();

            base.Dispose(disposing);
        }


    }
}
