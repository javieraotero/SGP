@using Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables
@model DataTableVm
@{
 
}
<style>
.seleccion 
{
    font-size:x-large;
    font-weight:bold;
}
</style>
<table id="@Model.Id" class="display @(Model.TableClass ?? DataTableVm.DefaultTableClass ?? "")">
    <thead>
        <tr>
            @foreach (var column in Model.Columns)
            {
                <th>@column.Item1</th>
            }
            @if (Model.operators != null)
            { 
                <th>Opciones</th>
            }
        </tr>
        @if (Model.ColumnFilter)
        {
            <tr>
                @foreach (var column in Model.Columns)
                {
                    <th>@column.Item1</th>
                }
            </tr>
        }
    </thead>
    <tbody>
        <tr>
            <td colspan="5" class="dataTables_empty">
                Loading data from server
            </td>
        </tr>
    </tbody>
</table>
<script type="text/javascript">
    var dt;
    $(document).ready(function() {
        var $table = $('#@Model.Id');
        dt = $table.dataTable({
            "bProcessing": true,
            "oLanguage": { "sUrl": "@Url.Content("~/Scripts/DataTables-1.9.2/media/js/es.datatables.txt")" },
            "bJQueryUI": true,
			"sPaginationType": "full_numbers",
            "bStateSave": false,
            "bServerSide": true,
            "aoColumns": [
              @{
                var lastItem = Model.Columns.Last().Item1;
                foreach (var column in Model.Columns) {
                    /* Las columnas Id se ocultan */
                    if (column.Item1.ToUpper() == "ID") {
                      @: { sDefaultContent: "", bVisible: false }, 
                    }
                    else {
                        if (column.Item1 != lastItem) {
                            @:  { sDefaultContent: "-" },
                        } 
                        else {
                            if (Model.operators == null) {
                                @: { sDefaultContent: "-" }
                            } else {
                                @:  { sDefaultContent: "-" }, { sDefaultContent: "", bSearchable: false }
                            }
                        }
                    }
                }
              }],
            
            @{
            if (Model.operators != null) {
            <text>
            "aoColumnDefs": [ {
                "aTargets": [ @Model.Columns.Count()],
                "fnRender": function (oObj) {
                    return '@{
                        for (int i = 0; i < Model.operators.Length; i++)
                        {
                            <text><a href="#">@Model.operators[i].display</a></text>;
                        }
                    }'
                 }
            }],
            </text>
            }
            }
            "bFilter": '@Model.ShowSearch.ToString().ToLower()',
            "sDom": '@Html.Raw(Model.Dom)',
            "aLengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
            "sAjaxSource": "@Html.Raw(Model.AjaxUrl)", 
            "fnServerData": function(sSource, aoData, fnCallback) {
                $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
                    "success": fnCallback
                });
            }
        });

//        var keys = new KeyTable( {
//        "table": document.getElementById('table-id2'),
//        "datatable": dt,
//        "focus": [1,0],
//        "focusClass":"seleccion"
//    } );

        @if (Model.ColumnFilter)
        {
<text>
            dt.columnFilter({
                sPlaceHolder: "head:before",
                aoColumns: [@Html.Raw(Model.ColumnFiltersString)]
            });
</text>
        }



    });
</script>
