<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.1.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2012-10-09T18:48:54</timestamp>
        <product version="5.0.2500.0" user="Sin registrar " serial="000-00-000-391">Dotfuscator Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>Syncrosoft.Framework.dll</name>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;PropertyType&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Value&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_PropertyType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Value</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;PropertyType&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Value&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;i&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;pairs&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_i</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_pairs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;i&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;pairs&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;&lt;&gt;h__TransparentIdentifier5&gt;j__TPar</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;values&gt;j__TPar</name>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType2`2</name>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_&lt;&gt;h__TransparentIdentifier5</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_values</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;&lt;&gt;h__TransparentIdentifier5&gt;i__Field</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;values&gt;i__Field</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object[]()</signature>
                        <name>get_aaData</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_iTotalDisplayRecords</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_iTotalRecords</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_sEcho</name>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>set_aaData</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_iTotalDisplayRecords</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_iTotalRecords</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_sEcho</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>&lt;aaData&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;iTotalDisplayRecords&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;iTotalRecords&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;sEcho&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;)</signature>
                        <name>DateFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FilterMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam, System.Linq.IQueryable, int32&amp;, System.Tuple`2&lt;string,System.Type&gt;[])</signature>
                        <name>FilterPagingSortingSearch</name>
                    </method>
                    <method>
                        <signature>string(string, System.Tuple`2&lt;string,System.Type&gt;, System.Collections.Generic.List`1&lt;object&gt;)</signature>
                        <name>GetFilterClause</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/ReturnedFilteredQueryForType(System.Func`2&lt;System.Type,bool&gt;, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/GuardedFilter)</signature>
                        <name>Guard</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(System.Type)</signature>
                        <name>Is</name>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsDateType</name>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsNumericType</name>
                    </method>
                    <method>
                        <signature>string(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;)</signature>
                        <name>NumericFilter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/GuardedFilter)</signature>
                        <name>RegisterFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/ReturnedFilteredQueryForType&gt;</signature>
                        <name>Filters</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/&lt;&gt;c__DisplayClass1</name>
                <newname>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;)</signature>
                        <name>&lt;Guard&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/GuardedFilter</signature>
                        <name>filter</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Type,bool&gt;</signature>
                        <name>guard</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/&lt;&gt;c__DisplayClass4</name>
                <newname>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;GetFilterClause&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Tuple`2&lt;string,System.Type&gt;</signature>
                        <name>column</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/GuardedFilter</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>string(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>string(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesFilter/ReturnedFilteredQueryForType</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>string(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>string(string, string, System.Type, System.Collections.Generic.List`1&lt;object&gt;)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesHelper</name>
                <methodlist>
                    <method>
                        <arity>2</arity>
                        <signature>bool(System.Reflection.PropertyInfo)</signature>
                        <name>&lt;DataTableVm&gt;b__4</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>System.Tuple`2&lt;string,System.Type&gt;(System.Reflection.PropertyInfo)</signature>
                        <name>&lt;DataTableVm&gt;b__5</name>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;string,System.Type&gt;(string)</signature>
                        <name>&lt;DataTableVm&gt;b__8</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Web.Mvc.MvcHtmlString(System.Web.Mvc.HtmlHelper, bool, bool, bool)</signature>
                        <name>DataTableIncludes</name>
                    </method>
                    <method>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm(System.Web.Mvc.HtmlHelper, string, string, string[])</signature>
                        <name>DataTableVm</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm(System.Web.Mvc.HtmlHelper, string, System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`1&lt;!!1&gt;&gt;&gt;, System.Tuple`2&lt;string,System.Type&gt;[])</signature>
                        <name>DataTableVm</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;string,System.Tuple`2&lt;string,System.Type&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate9</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesHelper/&lt;&gt;c__DisplayClass2</name>
                <newname>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesHelper/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;DataTableIncludes&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;DataTableIncludes&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>output</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesModelBinder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Web.Mvc.ControllerContext, System.Web.Mvc.ModelBindingContext)</signature>
                        <name>BindModel</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_bEscapeRegex</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;bool&gt;()</signature>
                        <name>get_bEscapeRegexColumns</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;bool&gt;()</signature>
                        <name>get_bSearchable</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;bool&gt;()</signature>
                        <name>get_bSortable</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_iColumns</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_iDisplayLength</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_iDisplayStart</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;()</signature>
                        <name>get_iSortCol</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_iSortingCols</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_sEcho</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_sSearch</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_sSearchColumns</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_sSortDir</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_bEscapeRegex</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;bool&gt;)</signature>
                        <name>set_bEscapeRegexColumns</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;bool&gt;)</signature>
                        <name>set_bSearchable</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;bool&gt;)</signature>
                        <name>set_bSortable</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_iColumns</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_iDisplayLength</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_iDisplayStart</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;int32&gt;)</signature>
                        <name>set_iSortCol</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_iSortingCols</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_sEcho</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_sSearch</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_sSearchColumns</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_sSortDir</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;bEscapeRegex&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;bool&gt;</signature>
                        <name>&lt;bEscapeRegexColumns&gt;k__BackingField</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;bool&gt;</signature>
                        <name>&lt;bSearchable&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;bool&gt;</signature>
                        <name>&lt;bSortable&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;iColumns&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;iDisplayLength&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;iDisplayStart&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>&lt;iSortCol&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;iSortingCols&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;sEcho&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;sSearch&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;sSearchColumns&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;sSortDir&gt;k__BackingField</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(!!0)</signature>
                        <name>&lt;Create&gt;b__0</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(!!0)</signature>
                        <name>&lt;CreateResultUsingEnumerable&gt;b__1</name>
                    </method>
                    <method>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult(object, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`1&lt;!!0&gt;(System.Linq.IQueryable`1&lt;!!0&gt;, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`1&lt;!!1&gt;(System.Linq.IQueryable`1&lt;!!0&gt;, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam, System.Func`2&lt;!!0,!!1&gt;)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`1&lt;!!0&gt;(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam)</signature>
                        <name>CreateResultUsingEnumerable</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult/&lt;&gt;c__DisplayClass3</name>
                <newname>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.MethodInfo)</signature>
                        <name>&lt;Create&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>s</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TRes</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Linq.IQueryable`1&lt;!0&gt;, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam, System.Func`2&lt;!0,!1&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.DateTimeOffset)</signature>
                        <name>&lt;.cctor&gt;b__b</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.DateTime)</signature>
                        <name>&lt;.cctor&gt;b__c</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.Web.IHtmlString)</signature>
                        <name>&lt;.cctor&gt;b__d</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>&lt;.cctor&gt;b__e</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Tuple`2&lt;string,System.Type&gt;(System.Reflection.PropertyInfo)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesData(System.Linq.IQueryable`1&lt;!0&gt;, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesParam, System.Tuple`2&lt;string,System.Type&gt;[])</signature>
                        <name>GetResults</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.Type, object)</signature>
                        <name>GetTransformedValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/PropertyTransformer&lt;!0,!1&gt;(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,!!0&gt;)</signature>
                        <name>Guard</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,!!0&gt;)</signature>
                        <name>RegisterFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;!0,!1&gt;</signature>
                        <name>_transform</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Reflection.PropertyInfo,System.Tuple`2&lt;string,System.Type&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,System.DateTime&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate10</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,System.Web.IHtmlString&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate11</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,object&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,System.DateTimeOffset&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/PropertyTransformer&lt;!0,!1&gt;&gt;</signature>
                        <name>PropertyTransformers</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>3</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TRes</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>TVal</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/&lt;&gt;c__DisplayClass3`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Type, object)</signature>
                        <name>&lt;Guard&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1&lt;!0,!1,!2&gt;</signature>
                        <name>transformer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TRes</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/&lt;&gt;c__DisplayClass8</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2&lt;!0,!1&gt;</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.PropertyInfo[]</signature>
                        <name>properties</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>3</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TRes</name>
                </genericparameter>
                <genericparameter sequence="2">
                    <name>TVal</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/GuardedValueTransformer`1</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(!2, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>object(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>object(!2)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>TRes</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTablesResult`2/PropertyTransformer</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.Type, object, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>object(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>object(System.Type, object)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.IEnumerable`1&lt;System.Tuple`2&lt;string,System.Type&gt;&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, System.Type)</signature>
                        <name>&lt;.cctor&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, System.Type)</signature>
                        <name>&lt;.cctor&gt;b__3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(string, System.Type)</signature>
                        <name>&lt;FilterOn&gt;b__7</name>
                    </method>
                    <method>
                        <signature>string(System.Tuple`2&lt;string,System.Type&gt;)</signature>
                        <name>&lt;get_ColumnFiltersString&gt;b__6</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/_FilterOn`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm&gt;()</signature>
                        <name>FilterOn</name>
                    </method>
                    <method>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/_FilterOn`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm&gt;(string)</signature>
                        <name>FilterOn</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AjaxUrl</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutoWidth</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ColumnFilter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ColumnFiltersString</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.Tuple`2&lt;string,System.Type&gt;&gt;()</signature>
                        <name>get_Columns</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DefaultTableClass</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Dom</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Id</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowPageSizes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowSearch</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TableClass</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_TableTools</name>
                    </method>
                    <method>
                        <signature>string(string, System.Type)</signature>
                        <name>GetFilterType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AjaxUrl</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutoWidth</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ColumnFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;System.Tuple`2&lt;string,System.Type&gt;&gt;)</signature>
                        <name>set_Columns</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DefaultTableClass</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Id</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowPageSizes</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowSearch</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TableClass</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_TableTools</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AjaxUrl&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AutoWidth&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ColumnFilter&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.Tuple`2&lt;string,System.Type&gt;&gt;</signature>
                        <name>&lt;Columns&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DefaultTableClass&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Id&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowPageSizes&gt;k__BackingField</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ShowSearch&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;TableClass&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;TableTools&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;string,System.Type,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;string,System.Type,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>DateTypes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.FilterRuleList</signature>
                        <name>FilterTypeRules</name>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.FilterRuleList</signature>
                        <name>StaticFilterTypeRules</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>TTarget</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/_FilterOn`1</name>
                <methodlist>
                    <method>
                        <signature>void(!0, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.FilterRuleList, System.Func`3&lt;string,System.Type,bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddRule</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>DateRange</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>None</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>Number</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>NumberRange</name>
                    </method>
                    <method>
                        <signature>!0(string[])</signature>
                        <name>Select</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.FilterRuleList</signature>
                        <name>_list</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;string,System.Type,bool&gt;</signature>
                        <name>_predicate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>_target</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>TTarget</name>
                </genericparameter>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/_FilterOn`1/&lt;&gt;c__DisplayClassc</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, System.Type)</signature>
                        <name>&lt;AddRule&gt;b__b</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/_FilterOn`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>result</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/&lt;&gt;c__DisplayClass9</name>
                <newname>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DataTableVm/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Type)</signature>
                        <name>&lt;FilterOn&gt;b__8</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>columnName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ClassFactory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty[])</signature>
                        <name>CreateDynamicClass</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty[], System.Type, System.Type)</signature>
                        <name>CreateDynamicClass</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Emit.TypeBuilder, System.Reflection.FieldInfo[])</signature>
                        <name>GenerateEquals</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Emit.TypeBuilder, System.Reflection.FieldInfo[])</signature>
                        <name>GenerateGetHashCode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.FieldInfo[](System.Reflection.Emit.TypeBuilder, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty[], System.Type)</signature>
                        <name>GenerateProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type(System.Collections.Generic.IEnumerable`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty&gt;)</signature>
                        <name>GetDynamicClass</name>
                    </method>
                    <method>
                        <signature>System.Type(System.Collections.Generic.IEnumerable`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty&gt;, System.Type, System.Type)</signature>
                        <name>GetDynamicClass</name>
                    </method>
                    <method>
                        <signature>void(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty)</signature>
                        <name>PrintPropertyInfo</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>classCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.Signature,System.Type&gt;</signature>
                        <name>classes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ClassFactory</signature>
                        <name>Instance</name>
                    </field>
                    <field>
                        <signature>System.Reflection.Emit.ModuleBuilder</signature>
                        <name>module</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ReaderWriterLock</signature>
                        <name>rwLock</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicClass</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicExpression</name>
                <methodlist>
                    <method>
                        <signature>System.Type(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty[])</signature>
                        <name>CreateClass</name>
                    </method>
                    <method>
                        <signature>System.Type(System.Collections.Generic.IEnumerable`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty&gt;)</signature>
                        <name>CreateClass</name>
                    </method>
                    <method>
                        <signature>System.Type(System.Collections.Generic.IEnumerable`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty&gt;, System.Type, System.Type)</signature>
                        <name>CreateClass</name>
                    </method>
                    <method>
                        <signature>System.Type(System.Type, System.Type, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty[])</signature>
                        <name>CreateClass</name>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type, string, object[])</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <arity>2</arity>
                        <signature>System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;(string, object[])</signature>
                        <name>ParseLambda</name>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.LambdaExpression(System.Linq.Expressions.ParameterExpression[], System.Type, string, System.Type, object[])</signature>
                        <name>ParseLambda</name>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.LambdaExpression(System.Type, string, System.Type, object[])</signature>
                        <name>ParseLambda</name>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.LambdaExpression(System.Type, System.Type, string, System.Type, object[])</signature>
                        <name>ParseLambda</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicOrdering</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>Ascending</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Linq.Expressions.Expression</signature>
                        <name>Selector</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.Type, System.Reflection.Emit.CustomAttributeBuilder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Reflection.Emit.CustomAttributeBuilder()</signature>
                        <name>get_CustomAttributeBuilder</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_Type</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.Emit.CustomAttributeBuilder)</signature>
                        <name>set_CustomAttributeBuilder</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Reflection.Emit.CustomAttributeBuilder</signature>
                        <name>&lt;CustomAttributeBuilder&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>type</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicQueryable</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Linq.IQueryable)</signature>
                        <name>Any</name>
                    </method>
                    <method>
                        <signature>int32(System.Linq.IQueryable)</signature>
                        <name>Count</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, string, string, object[])</signature>
                        <name>GroupBy</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, System.Collections.IEnumerable, string, string, string, object[])</signature>
                        <name>Join</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Linq.IQueryable`1&lt;!!0&gt;(System.Linq.IQueryable`1&lt;!!0&gt;, System.Collections.Generic.IEnumerable`1&lt;!!0&gt;, string, string, string, object[])</signature>
                        <name>Join</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, string, object[])</signature>
                        <name>OrderBy</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Linq.IQueryable`1&lt;!!0&gt;(System.Linq.IQueryable`1&lt;!!0&gt;, string, object[])</signature>
                        <name>OrderBy</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, string, object[])</signature>
                        <name>Select</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, int32)</signature>
                        <name>Skip</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, int32)</signature>
                        <name>Take</name>
                    </method>
                    <method>
                        <signature>System.Linq.IQueryable(System.Linq.IQueryable, string, object[])</signature>
                        <name>Where</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Linq.IQueryable`1&lt;!!0&gt;(System.Linq.IQueryable`1&lt;!!0&gt;, string, object[])</signature>
                        <name>Where</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Linq.Expressions.ParameterExpression[], string, object[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData(System.Reflection.MethodBase)</signature>
                        <name>&lt;FindBestMethod&gt;b__9</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.MethodBase(System.Reflection.PropertyInfo)</signature>
                        <name>&lt;FindIndexer&gt;b__1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.MethodBase)</signature>
                        <name>&lt;FindIndexer&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Type&gt;, System.Type)</signature>
                        <name>AddInterface</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, object)</signature>
                        <name>AddSymbol</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type, string, System.Linq.Expressions.Expression&amp;, int32)</signature>
                        <name>CheckAndPromoteOperand</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type, string, System.Linq.Expressions.Expression&amp;, System.Linq.Expressions.Expression&amp;, int32)</signature>
                        <name>CheckAndPromoteOperands</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Type, System.Type, System.Type)</signature>
                        <name>CompareConversions</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;()</signature>
                        <name>CreateKeywords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(object, string)</signature>
                        <name>CreateLiteral</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodBase&gt;, System.Linq.Expressions.Expression[], System.Reflection.MethodBase&amp;)</signature>
                        <name>FindBestMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type(System.Type, System.Type)</signature>
                        <name>FindGenericType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Type, System.Linq.Expressions.Expression[], System.Reflection.MethodBase&amp;)</signature>
                        <name>FindIndexer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Type, string, bool, System.Linq.Expressions.Expression[], System.Reflection.MethodBase&amp;)</signature>
                        <name>FindMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.MemberInfo(System.Type, string, bool)</signature>
                        <name>FindPropertyOrField</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateAdd</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, int32)</signature>
                        <name>GenerateConditional</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Type, int32)</signature>
                        <name>GenerateConversion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateEqual</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateGreaterThan</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateGreaterThanEqual</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateLessThan</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateLessThanEqual</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateNotEqual</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(string, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateStaticMethodCall</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateStringConcat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GenerateSubtract</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetIdentifier</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Type(System.Type)</signature>
                        <name>GetNonNullableType</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(System.Type)</signature>
                        <name>GetNumericTypeKind</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.MethodInfo(string, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)</signature>
                        <name>GetStaticMethod</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(System.Type)</signature>
                        <name>GetTypeName</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Exception(string, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, int32)</signature>
                        <name>IncompatibleOperandsError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData, System.Linq.Expressions.Expression[])</signature>
                        <name>IsApplicable</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Linq.Expressions.Expression[], Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData, Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData)</signature>
                        <name>IsBetterThan</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type, System.Type)</signature>
                        <name>IsCompatibleWith</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsEnumType</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsNullableType</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsNumericType</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsPredefinedType</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsSignedIntegralType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsUnsignedIntegralType</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextChar</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NextToken</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type, System.Type)</signature>
                        <name>Parse</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseAdditive</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Type, string, int32)</signature>
                        <name>ParseAggregate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression[]()</signature>
                        <name>ParseArgumentList</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression[]()</signature>
                        <name>ParseArguments</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseComparison</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression)</signature>
                        <name>ParseElementAccess</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(string, System.Type)</signature>
                        <name>ParseEnum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Exception(int32, string, object[])</signature>
                        <name>ParseError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Exception(string, object[])</signature>
                        <name>ParseError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseExpression</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseIdentifier</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseIif</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseIntegerLiteral</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseIt</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.LambdaExpression)</signature>
                        <name>ParseLambdaInvocation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseLogicalAnd</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseLogicalOr</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type, System.Linq.Expressions.Expression)</signature>
                        <name>ParseMemberAccess</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseMultiplicative</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseNew</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>object(string, System.Type)</signature>
                        <name>ParseNumber</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object(string, System.TypeCode)</signature>
                        <name>ParseNumber</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicOrdering&gt;()</signature>
                        <name>ParseOrdering</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseParenExpression</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParsePrimary</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParsePrimaryStart</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseRealLiteral</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseStringLiteral</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseTypeAccess</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Type)</signature>
                        <name>ParseUnary</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(System.Linq.Expressions.ParameterExpression[])</signature>
                        <name>ProcessParameters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>ProcessValues</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Linq.Expressions.Expression(System.Linq.Expressions.Expression, System.Type, bool)</signature>
                        <name>PromoteExpression</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;(System.Type)</signature>
                        <name>SelfAndBaseClasses</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;(System.Type)</signature>
                        <name>SelfAndBaseTypes</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetTextPos</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>TokenIdentifierIs</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateDigit</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId)</signature>
                        <name>ValidateToken</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId, string)</signature>
                        <name>ValidateToken</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>_baseType</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>_interfaceType</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>ch</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Reflection.PropertyInfo,System.Reflection.MethodBase&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Reflection.MethodBase,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Reflection.MethodBase,Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegated</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,object&gt;</signature>
                        <name>externals</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Linq.Expressions.Expression</signature>
                        <name>falseLiteral</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Linq.Expressions.ParameterExpression</signature>
                        <name>it</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>keywordIif</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>keywordIt</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>keywordNew</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;</signature>
                        <name>keywords</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Linq.Expressions.Expression,string&gt;</signature>
                        <name>literals</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Linq.Expressions.Expression</signature>
                        <name>nullLiteral</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Type[]</signature>
                        <name>predefinedTypes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,object&gt;</signature>
                        <name>symbols</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>textLen</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>textPos</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/Token</signature>
                        <name>token</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Linq.Expressions.Expression</signature>
                        <name>trueLiteral</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/&lt;&gt;c__DisplayClassf</name>
                <newname>b/l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData)</signature>
                        <name>&lt;FindBestMethod&gt;b__a</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData)</signature>
                        <name>&lt;FindBestMethod&gt;b__b</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData[]</signature>
                        <name>applicable</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Linq.Expressions.Expression[]</signature>
                        <name>args</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/&lt;&gt;c__DisplayClassf/&lt;&gt;c__DisplayClass11</name>
                <newname>b/l/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData)</signature>
                        <name>&lt;FindBestMethod&gt;b__c</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/&lt;&gt;c__DisplayClassf</signature>
                        <name>CS$&lt;&gt;8__locals10</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData</signature>
                        <name>m</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/&lt;SelfAndBaseClasses&gt;d__5</name>
                <newname>b/f</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;System.Type&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.Type&gt;.GetEnumerator</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Type&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;&gt;3__type</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>type</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/IAddSignatures</name>
                <newname>b/g</newname>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime, System.TimeSpan)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.TimeSpan&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.TimeSpan&gt;, System.Nullable`1&lt;System.TimeSpan&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan, System.TimeSpan)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/IArithmeticSignatures</name>
                <newname>b/i</newname>
                <methodlist>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64, float64)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal, System.Decimal)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;, System.Nullable`1&lt;float32&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;, System.Nullable`1&lt;float64&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;, System.Nullable`1&lt;int64&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Decimal&gt;, System.Nullable`1&lt;System.Decimal&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;, System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int64&gt;, System.Nullable`1&lt;unsigned int64&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64, unsigned int64)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/IEnumerableSignatures</name>
                <newname>b/a</newname>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>All</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Any</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Any</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Decimal&gt;)</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Count</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Count</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Max</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Min</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Decimal&gt;)</signature>
                        <name>Sum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Where</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/IEqualitySignatures</name>
                <newname>b/n</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid, System.Guid)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Guid&gt;, System.Nullable`1&lt;System.Guid&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/ILogicalSignatures</name>
                <newname>b/b</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/INegationSignatures</name>
                <newname>b/m</newname>
                <methodlist>
                    <method>
                        <signature>void(float32)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Decimal)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float32&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int64&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.Decimal&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/INotSignatures</name>
                <newname>b/h</newname>
                <methodlist>
                    <method>
                        <signature>void(bool)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/IRelationalSignatures</name>
                <newname>b/e</newname>
                <methodlist>
                    <method>
                        <signature>void(char, char)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime, System.DateTime)</signature>
                        <name>F</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;char&gt;, System.Nullable`1&lt;char&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>F</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.TimeSpan&gt;, System.Nullable`1&lt;System.TimeSpan&gt;)</signature>
                        <name>F</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan, System.TimeSpan)</signature>
                        <name>F</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/ISubtractSignatures</name>
                <newname>b/d</newname>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime, System.DateTime)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;, System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>F</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/MethodData</name>
                <newname>b/j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Linq.Expressions.Expression[]</signature>
                        <name>Args</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.MethodBase</signature>
                        <name>MethodBase</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.ParameterInfo[]</signature>
                        <name>Parameters</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/Token</name>
                <newname>b/k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>id</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pos</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</name>
                <newname>b/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Amphersand</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Asterisk</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Bar</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>CloseBracket</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>CloseParen</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Colon</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Comma</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Dot</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>DoubleAmphersand</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>DoubleBar</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>DoubleEqual</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>End</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Equal</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Exclamation</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>ExclamationEqual</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>GreaterThan</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>GreaterThanEqual</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Identifier</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>IntegerLiteral</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>LessGreater</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>LessThan</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>LessThanEqual</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Minus</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>OpenBracket</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>OpenParen</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Percent</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Plus</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Question</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>RealLiteral</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Slash</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>StringLiteral</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ExpressionParser/TokenId</signature>
                        <name>Unknown</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.ParseException</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>position</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.Res</name>
                <newname>d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AmbiguousConstructorInvocation</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>AmbiguousIndexerInvocation</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>AmbiguousMethodInvocation</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ArgsIncompatibleWithLambda</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BothTypesConvertToOther</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CannotConvertValue</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CannotIndexMultiDimArray</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CloseBracketOrCommaExpected</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CloseParenOrCommaExpected</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CloseParenOrOperatorExpected</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ColonExpected</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DigitExpected</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DotOrOpenParenExpected</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DuplicateIdentifier</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExpressionExpected</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExpressionTypeMismatch</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FirstExprMustBeBool</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IdentifierExpected</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IifRequiresThreeArgs</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IncompatibleOperand</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IncompatibleOperands</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvalidCharacter</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvalidCharacterLiteral</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvalidIndex</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvalidIntegerLiteral</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>InvalidRealLiteral</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MethodIsVoid</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MethodsAreInaccessible</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MissingAsClause</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NeitherTypeConvertsToOther</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoApplicableAggregate</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoApplicableIndexer</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoApplicableMethod</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoItInScope</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NoMatchingConstructor</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OpenBracketExpected</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OpenParenExpected</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ParseExceptionFormat</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SyntaxError</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TokenExpected</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TypeHasNoNullableForm</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UnknownIdentifier</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UnknownPropertyOrField</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UnterminatedStringLiteral</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.Signature</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.Signature)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>hashCode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.DynamicLinq.DynamicProperty[]</signature>
                        <name>properties</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.FilterRuleList</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Controles.Mvc.JQuery.Datatables.StaticReflectionHelper</name>
                <methodlist>
                    <method>
                        <signature>System.Reflection.MethodInfo(System.Linq.Expressions.Expression)</signature>
                        <name>MethodInfo</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Utils.Correo.Correos</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Net.Mail.MailMessage)</signature>
                        <name>MandarCorreo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Net.Mail.SmtpClient</signature>
                        <name>server</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Syncrosoft.Framework.Utils.Encriptacion.Encriptacion</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>generarClaveSHA1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>Syncrosoft.Framework.Utils.Encriptacion.Logger</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>EscribirLog</name>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>GrabarLogEx</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>55</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>391</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>190</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>25</statistic>
            <statistic>45,45 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>210</statistic>
            <statistic>53,71 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>186</statistic>
            <statistic>97,89 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>119</statistic>
            <statistic>30,43 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>37</statistic>
            <statistic>9,46 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>10</statistic>
            <statistic>2,56 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>5</statistic>
            <statistic>1,28 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>4</statistic>
            <statistic>1,02 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>4</statistic>
            <statistic>1,02 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>4</statistic>
            <statistic>1,02 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>